version: '3.3'

networks:
  sagdevops:
    external: true

secrets:
  registry.docker.tests.crt:
    external: true
  registry.docker.tests.key:
    external: true

services:
  registry:
    image: registry:2
    environment:
      - REGISTRY_HTTP_ADDR=:5000
      - REGISTRY_HTTP_TLS_CERTIFICATE=/run/secrets/registry.docker.tests.crt
      - REGISTRY_HTTP_TLS_KEY=/run/secrets/registry.docker.tests.key
#      - REGISTRY_AUTH=htpasswd
#      - REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd
#      - REGISTRY_AUTH_HTPASSWD_REALM=registry-realm
    ports:
      - "5000:5000"
    networks:
      - sag-network
    volumes:
      - type: bind
        source: /mnt/docker_registry/registrydata
        target: /var/lib/registry
    secrets:
      - registry.docker.tests.crt
      - registry.docker.tests.key
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.registry==true

  # Setup front-end
  registryfrontend:
    image: konradkleine/docker-registry-frontend:v2
    networks:
      - sag-network
    environment:
      - ENV_MODE_BROWSE_ONLY=false
      - ENV_DOCKER_REGISTRY_HOST=registry
      - ENV_DOCKER_REGISTRY_PORT=5000
      - ENV_DOCKER_REGISTRY_USE_SSL=1
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        traefik.port: 80
        traefik.docker.network: "sag-network"
        traefik.protocol: "http"
        traefik.frontend.rule: "Host:registryweb.docker.tests"
        traefik.enable: "true"
      restart_policy:
        condition: any
